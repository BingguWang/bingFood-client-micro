syntax = "proto3";

package order.service.v1;

import "google/api/annotations.proto";
import "v1/order_user_service.proto";

option go_package = "api/order/service/v1;v1";


service OrderService {
  rpc SettleOrder (SettleOrderRequest) returns (SettleOrderReply) {
  }

  rpc SubmitOrder (SubmitOrderRequest) returns (SubmitOrderReply) {
  }

  rpc PayOrder (PayOrderRequest) returns (PayOrderReply) {
  }

  // 支付回调成功后，需要做的订单操作
  rpc PayOrderSuccess (PayOrderSuccessRequest) returns (PayOrderSuccessReply) {
  }

  // 支付超时取消时,需要做的工作
  rpc PayOrderTimeout (PayOrderTimeoutRequest) returns (PayOrderTimeoutReply) {
  }

}

message PayOrderTimeoutRequest {
  string orderNumber = 1;
}
message PayOrderTimeoutReply {
  uint32  retCode = 1;
  string  retMsg = 2;
}

message PayOrderSuccessRequest {
  string orderNumber = 1;
}

message PayOrderSuccessReply {
  uint32  retCode = 1;
  string  retMsg = 2;
}

message PayOrderRequest {
  string orderNumber = 1;
}

message PayOrderReply {
  uint32  retCode = 1;
  string  retMsg = 2;
  WxPayMpOrderResult WxPayMpOrderResult = 3;
  string payNo = 4;
}
// 模拟一下微信支付就行了
message WxPayMpOrderResult {}

message SubmitOrderRequest{
  string remarks = 1;                // 备注
  order.service.v1.UserDeliveryAddr receiveAddr = 2;// 接收地址
  string receiverMobile = 3;                  // 接收人号码
  int32 redPacket = 4;                         // 红包
  uint32   payStatus = 5;                         // 支付状态
  uint64  shopId = 6;                         // 商家id
  string userMobile = 7; // 用户手机号码
}

message SubmitOrderReply{
  uint32  retCode = 1;
  string  retMsg = 2;
  string  orderNumber = 3;
}

message SettleOrderRequest  {
  repeated uint64 cartIds = 1;
  uint64 userId = 2;
  string userMobile = 3;
}

message SettleOrderReply {

  uint32  retCode = 1;
  string  retMsg = 2;

  Data data = 4;
  message Data{
    uint64 ShopId = 1;
    uint64 UserId = 2;
    string UserMobile = 3;
    string ReceiverMobile = 4;
    string ProdName = 5;
    int32 ProdNums = 6;
    int32 PackingAmount = 7;
    int32 DeliverAmount = 8;
    int32 ProdAmount = 9;
    int32 DiscountAmount = 10;
    int32 FinalAmount = 11;
    uint32 DeliverType = 12;
    repeated OrderItem OrderItems = 13;
  }

}

message OrderItem {
  uint64 OrderItemId = 1;
  string OrderNumber = 2;
  uint64 UserId = 3;
  int32 Score = 4;
  uint64 ShopId = 5;
  uint64 ProdId = 6;
  string ProdName = 7;
  uint32 ProdNums = 8;
  string Pic = 9;
  uint32 ProdAmount = 10;
  uint32 SkuId = 11;
  string SkuName = 12;
  int32 Price = 13;
  int32 oriPrice = 14;
  uint64 PropId = 15;
  string PropName = 16;
  uint32 IsCommented = 17;
  uint32 IsGood = 18;
  string Comment = 19;

}












